def longest_palindromic_substring(s):\n    def expand_around_center(left, right):\n        while left >= 0 and right < len(s) and s[left] == s[right]:\n            left -= 1\n            right += 1\n        return s[left + 1:right]\n\n    if len(s) < 1:\n        return ''\n\n    longest = ''\n    for i in range(len(s)):\n        # Odd length palindromes\n        current = expand_around_center(i, i)\n        if len(current) > len(longest):\n            longest = current\n        # Even length palindromes\n        current = expand_around_center(i, i + 1)\n        if len(current) > len(longest):\n            longest = current\n    return longest\n\n# Test cases\nprint(longest_palindromic_substring('babad') == 'bab' or longest_palindromic_substring('babad') == 'aba')\nprint(longest_palindromic_substring('cbbd') == 'bb')\nprint(longest_palindromic_substring('a') == 'a')